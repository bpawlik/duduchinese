<Page x:Class="DuDuChinese.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      d:DataContext="{d:DesignData SampleData/MainViewModelSampleData.xaml}"
      xmlns:local="using:DuDuChinese.Views"
      xmlns:c="using:DuDuChinese.Converters"
      xmlns:core="using:Template10.Services.PopupService"
      xmlns:behaviors="using:Template10.Behaviors"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:DuDuChinese.ViewModels" mc:Ignorable="d">

    <Page.Resources>
        <c:BooleanDoubleConverter x:Key="SmallFontSize" True="24" />
        <c:BooleanDoubleConverter x:Key="ChineseFontSize" True="36"/>
        <c:NotepadLookupConvertor x:Key="NotepadLookup"/>
        <c:MinimumLengthConverter x:Key="MinLengthChecker"/>
        <c:VisibilityConverter x:Key="VisibilityConverter" True="Visible" False="Collapsed"/>
        <c:VisibilityConverter x:Key="InvertedVisibility" True="Collapsed" False="Visible"/>
        <c:InvertedBooleanConverter x:Key="InvertedBoolean"/>
        <c:BooleanColorConverter x:Key="ListItemColor" True="Gray" />
    </Page.Resources>

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Narrow Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Normal Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Wide Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader" RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True" Text="DuDuChinese"
                             Background="{ThemeResource CustomHeaderBackground}">

            <!-- primary commands -->
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Click="AppBarAddButton_Click" Label="Add"
                              Visibility="{x:Bind ViewModel.IsActive, Converter={StaticResource VisibilityConverter}}">
                    <SymbolIcon Symbol="Add" Height="20" VerticalAlignment="Top" />
                </AppBarButton>
                <AppBarButton Click="AppBarUploadButton_Click" Label="Add"
                              Visibility="{x:Bind ViewModel.IsActive, Converter={StaticResource VisibilityConverter}}">
                    <SymbolIcon Symbol="Upload" Height="20" VerticalAlignment="Top" />
                </AppBarButton>
            </controls:PageHeader.PrimaryCommands>

            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <Pivot x:Name="pivot" Title=" " Padding="0,-53,0,0" Margin="0,53,0,0" SelectionChanged="pivot_SelectionChanged"
               IsHitTestVisible="{x:Bind ViewModel.IsDataLoaded}"
               SelectedIndex="{x:Bind ViewModel.SelectedPivotIndex, Mode=TwoWay}">
            <PivotItem x:Name="SearchPane" Header="Search" d:DataContext="{d:DesignData SampleData/MainViewModelSampleData.xaml}">
                <!-- Search pivot content goes here-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Row="0">
                        <TextBox x:Name="Query" InputScope="Search" GotFocus="Query_GotFocus" LostFocus="Query_LostFocus" KeyDown="Query_KeyDown"
                                 Text="{Binding QueryText}"/>
                        <TextBlock x:Name="Status" Text="{x:Bind ViewModel.StatusText, Mode=TwoWay}" TextWrapping="Wrap"
                                   Visibility="{x:Bind ViewModel.StatusVisibility, Mode=TwoWay}" />
                        <ProgressBar x:Name="Progress" Visibility="Collapsed" />
                        <MediaElement x:Name="media" AutoPlay="False" />
                    </StackPanel>
                    <ListBox x:Name="Results" ItemsSource="{Binding Items}" Grid.Row="1" VirtualizingStackPanel.VirtualizationMode="Standard" SelectionChanged="ListBox_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <StackPanel x:Name="DefaultView" Margin="0,0,0,0">
                                        <TextBlock Text="{Binding Pinyin}" Loaded="Pinyin_Loaded" TextWrapping="NoWrap" TextTrimming="WordEllipsis" FontSize="26" />
                                        <TextBlock Text="{Binding English}" TextWrapping="NoWrap" TextTrimming="WordEllipsis" FontSize="20" />
                                        <TextBlock Text="{Binding Chinese}" TextWrapping="NoWrap" TextTrimming="WordEllipsis" FontSize="26" />
                                    </StackPanel>
                                    <StackPanel x:Name="ExpandedView" Margin="0,0,0,0" Visibility="Collapsed">
                                        <TextBlock Text="{Binding Pinyin}" Loaded="Pinyin_Loaded" TextWrapping="Wrap" TextTrimming="WordEllipsis" FontSize="26"/>
                                        <TextBlock Text="{Binding EnglishWithNewlines}" TextWrapping="Wrap" TextTrimming="WordEllipsis" FontSize="20" />
                                        <Button Tag="{Binding Index}" Margin="-5,0,0,0" Click="Character_Click" Background="Transparent">
                                            <Button.Content>
                                                <TextBlock Text="{Binding Chinese}" TextWrapping="Wrap" TextTrimming="WordEllipsis" FontSize="26"  />
                                            </Button.Content>
                                        </Button>
                                    </StackPanel>

                                    <StackPanel x:Name="ActionPanel" Margin="-5,2,0,0" Orientation="Horizontal" Visibility="Collapsed">
                                        <Button x:Name="PlayButton" Tag="{Binding Index}" Click="PlayButton_Click" Background="Transparent">
                                            <Button.Content>
                                                <SymbolIcon Symbol="Play" />
                                            </Button.Content>
                                        </Button>
                                        <Button x:Name="CopyButton" Tag="{Binding Index}" Background="Transparent" Click="CopyButton_Click">
                                            <Button.Content>
                                                <SymbolIcon Symbol="Copy" />
                                            </Button.Content>
                                        </Button>
                                        <Button x:Name="AddToListButton" Tag="{Binding Index}" Background="Transparent" Click="AddToListButton_Click">
                                            <Button.Content>
                                                <SymbolIcon Symbol="Add" />
                                            </Button.Content>
                                        </Button>
                                        <Button x:Name="SearchButton" Tag="{Binding Index}" Background="Transparent" Click="SearchButton_Click">
                                            <Button.Content>
                                                <SymbolIcon Symbol="Find" />
                                            </Button.Content>
                                        </Button>
                                        <Button x:Name="DecomposeButton" Tag="{Binding Index}" Background="Transparent" Click="DecomposeButton_Click">
                                            <Button.Content>
                                                <SymbolIcon Symbol="Cut" />
                                            </Button.Content>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </PivotItem>
            <PivotItem Header="Learn">
                <!-- Learn pivot content goes here-->
                <StackPanel Margin="10,10,0,0" Orientation="Horizontal">
                    <Grid Margin="0" MinWidth="300" >
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition  />
                        </Grid.RowDefinitions>
                        <Button FontSize="20" HorizontalAlignment="Stretch" Height="75" Grid.Row="0" Margin="0,10"
                        Content="Revision"
                        Click="{x:Bind ViewModel.GotoRevision}" />
                        <Button FontSize="20" HorizontalAlignment="Stretch" Height="75" Grid.Row="1" Margin="0,10"
                        Content="New Material"
                        Click="{x:Bind ViewModel.GotoNewMaterial}" />
                    </Grid>
                </StackPanel>
            </PivotItem>
            <PivotItem x:Name="ListsPane" Header="Lists" Margin="12,8,12,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ListBox x:Name="ListListBox" VirtualizingStackPanel.VirtualizationMode="Standard" Margin="0,0,0,0"
                             ItemsSource="{Binding Items}"
                             ScrollViewer.IsVerticalRailEnabled="True"
                             SelectionChanged="ListListBox_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Holding="ListItem_Holding"  RightTapped="ListItem_RightTapped" MinWidth="300" Orientation="Horizontal" >
                                    <FlyoutBase.AttachedFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem x:Name="EditButton"
                                                        Text="Rename"
                                                        Click="RenameList_Click"/>
                                            <MenuFlyoutItem x:Name="DeleteButton"
                                                        Text="Delete"
                                                        Click="DeleteList_Click"/>
                                            <MenuFlyoutItem x:Name="SaveButton"
                                                        Text="Save as..."
                                                        Click="SaveList_Click"/>
                                            <ToggleMenuFlyoutItem x:Name="SetAsDefault"
                                                        Text="Set as default"
                                                        Click="SetAsDefaultList_Click"
                                                        IsChecked="{Binding IsDefault, Mode=TwoWay}" />
                                        </MenuFlyout>
                                    </FlyoutBase.AttachedFlyout>
                                    <!-- This border appears on items that are not selected as default -->
                                    <Border Height="40" Width="40" Background="Transparent" Visibility="{Binding IsDefault, Converter={StaticResource InvertedVisibility}}">
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock
                                                Text="{Binding LineTwo}"
                                                Width="39"
                                                TextAlignment="Center"
                                                Visibility="{Binding ElementName=ListsPane, Path=DataContext.AddInProgress, Converter={StaticResource InvertedVisibility}}"/>
                                            <!--This text appears when adding is in progress-->
                                            <TextBlock
                                                Text="+"
                                                FontSize="32"
                                                Margin="15,-10,0,0"
                                                TextAlignment="Center"
                                                Visibility="{Binding ElementName=ListsPane, Path=DataContext.AddInProgress, Converter={StaticResource VisibilityConverter}}" />
                                        </StackPanel>
                                    </Border>
                                    <!-- This border appears on item that is selected as default -->
                                    <Border Height="40" Width="40" Background="DarkOrange" Visibility="{Binding IsDefault, Converter={StaticResource VisibilityConverter}}">
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock
                                                Text="{Binding LineTwo}"
                                                Width="39"
                                                TextAlignment="Center"
                                                Visibility="{Binding ElementName=ListsPane, Path=DataContext.AddInProgress, Converter={StaticResource InvertedVisibility}}"/>
                                        </StackPanel>
                                    </Border>
                                    <StackPanel>
                                        <!--This text block is visible when usual browsing of the list-->
                                        <TextBlock
                                            Text="{Binding Name}"
                                            Visibility="{Binding IsEditable, Converter={StaticResource InvertedVisibility}}"
                                            Margin="15,10,0,0"
                                            HorizontalAlignment="Center"
                                            TextWrapping="NoWrap"
                                            TextTrimming="WordEllipsis"/>
                                        <!--This text block is visible when renaming the list-->
                                        <TextBox
                                            Text="{Binding Name}"
                                            Visibility="{Binding IsEditable, Converter={StaticResource VisibilityConverter}}"
                                            Margin="8,5,0,0"
                                            IsEnabled="{Binding IsEditable}"
                                            IsEnabledChanged="ListEdit_IsEnabledChanged"
                                            MinWidth="200"
                                            InputScope="Default"
                                            LostFocus="ListEdit_LostFocus"
                                            KeyDown="ListEdit_KeyDown" />
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </PivotItem>
        </Pivot>
    </RelativePanel>
</Page>

