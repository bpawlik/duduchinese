<Page x:Class="DuDuChinese.Views.ListsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:DuDuChinese.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:DuDuChinese.ViewModels" mc:Ignorable="d">

    <Page.DataContext>
        <vm:ListsPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <!--<VisualState.Setters>
                        -->
                    <!--  TODO: change properties for narrow view  -->
                    <!--
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>-->
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <!--<VisualState.Setters>
                        -->
                    <!--  TODO: change properties for normal view  -->
                    <!--
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>-->
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <!--<VisualState.Setters>
                        -->
                    <!--  TODO: change properties for wide view  -->
                    <!--
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>-->
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader" RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True" Text="Lists">

            <!-- primary commands -->
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.AddList}" Label="Add">
                    <SymbolIcon Symbol="Add" />
                </AppBarButton>
                <AppBarButton Click="{x:Bind ViewModel.UploadList}" Label="Upload" >
                    <SymbolIcon Symbol="Upload" />
                </AppBarButton>
            </controls:PageHeader.PrimaryCommands>

            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              Grid.Row="1"
              Grid.ColumnSpan="2" Margin="10,53,-90,-640">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="MasterColumn" Width="320"  />
                <ColumnDefinition x:Name="DetailColumn" Width="*" />
            </Grid.ColumnDefinitions>

            <ListView x:Name="listsView" ItemsSource="{x:Bind ViewModel.SavedLists}"
                      xmlns:m="using:DuDuChinese.Models"
                      Tapped="{x:Bind ViewModel.OnItemClick}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="m:DictionaryItemList" >
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,14" >
                            <TextBlock Text="{x:Bind Title}" />
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout >
                                    <MenuFlyoutItem Text="Rename" Click="RenameList_Click"/>
                                    <MenuFlyoutItem Text="Delete" Click="DeleteList_Click" />
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </RelativePanel>
</Page>

